{"version":3,"sources":["index.tsx"],"names":["App","params","useState","height","window","innerHeight","width","innerWidth","myWindowSize","setMyWindowSize","calcButtonSize","calcGapSize","buttonSize","setButtonSize","gapSize","setGapSize","fontSize","console","log","React","useEffect","handleResize","addEventListener","removeEventListener","StrictMode","className","style","gridTemplateColumns","gridTemplateRows","gap","ReactDOM","render","document","getElementById"],"mappings":"4LASA,SAASA,EAAIC,GAGX,IACA,EAAwCC,mBAAqB,CAC3DC,OAAQC,OAAOC,YAAY,GAC3BC,MAAOF,OAAOG,WAAW,KAF3B,mBAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAiB,WACrB,OAAQN,OAAOG,WANC,IAMsB,KAElCI,EAAc,WAClB,OAASP,OAAOG,WATA,GASiC,EAAXK,GAAc,GAKtD,EAAoCV,mBAAiBQ,KAArD,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA8BX,mBAAiBS,KAA/C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCb,mBAJN,GAAjBQ,KAIT,mBAAOM,EAAP,UAmBA,OAlBAC,QAAQC,IAAR,eAAoBd,OAAOG,WAA3B,YAAyCH,OAAOC,cAChDc,IAAMC,WAAU,WACd,SAASC,IACPJ,QAAQC,IAAR,gBAAqBd,OAAOG,WAA5B,YAA0CH,OAAOC,cACjDI,EAAgB,CACdN,OAAQC,OAAOC,YAAY,GAC3BC,MAAOF,OAAOG,WAAW,KAE3BM,EAAcH,KACdK,EAAWJ,KAGb,OADAP,OAAOkB,iBAAiB,SAAUD,GAC3B,WACLjB,OAAOmB,oBAAoB,SAAUF,OAMvC,cAAC,IAAMG,WAAP,UACI,sBAAKC,UAAU,mDAAmDC,MAAO,CACvEC,oBAAoB,aAAD,OAAef,EAAf,OACnBgB,iBAAiB,kBAAD,OAAoBhB,EAApB,OAChBN,MAAM,GAAD,OAAIE,EAAaF,MAAM,GAAvB,MACLH,OAAO,GAAD,OAAIK,EAAaL,OAAO,GAAxB,MACN0B,IAAI,GAAD,OAAIf,EAAJ,MACHE,SAAS,GAAD,OAAKA,EAAL,OANV,UAQE,qBAAKS,UAAU,6FAAf,SACE,qBAAKA,UAAU,GAAf,2BAEF,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,UAAf,kBAEF,qBAAKA,UAAU,gBAAf,SACE,wCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAGF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAGF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAGF,qBAAKA,UAAU,2BAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,sCAEF,qBAAKA,UAAU,gBAAf,SACE,2CAOZK,IAASC,OACP,cAAC,IAAMP,WAAP,UACE,cAACxB,EAAD,MAEFgC,SAASC,eAAe,W","file":"static/js/main.80501615.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\ninterface WindowSize {\n  height: number,\n  width: number\n}\n\nfunction App(params: any) {\n\n\n  const myMargine = 20\n  const [myWindowSize, setMyWindowSize] = useState<WindowSize>({\n    height: window.innerHeight-20,\n    width: window.innerWidth-20\n  })\n  const calcButtonSize = ()=> {\n    return (window.innerWidth -myMargine)/4.5\n  }\n  const calcGapSize = () => {\n    return ((window.innerWidth-myMargine)-buttonSize*4)/3\n  }\n  const calcFontSize = ()=> {\n    return calcButtonSize()*0.5    \n  }\n  const [buttonSize, setButtonSize] = useState<number>(calcButtonSize()) \n  const [gapSize, setGapSize] = useState<number>(calcGapSize())\n  const [fontSize, setFontSize] = useState<number>(calcFontSize())\n  console.log(`isze ${window.innerWidth} ${window.innerHeight}`)\n  React.useEffect(() => {\n    function handleResize() {\n      console.log(`resze ${window.innerWidth} ${window.innerHeight}`)\n      setMyWindowSize({\n        height: window.innerHeight-20,\n        width: window.innerWidth-20\n      })\n      setButtonSize(calcButtonSize())\n      setGapSize(calcGapSize())\n    }\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  })\n\n  /*grid-cols-4 grid-rows-6*/\n  return (\n    <React.StrictMode>\n        <div className=\"grid gap-4 items-center justify-items-center m-1\" style={{\n          gridTemplateColumns: `repeat(4, ${buttonSize}px)`,\n          gridTemplateRows: `auto repeat(5, ${buttonSize}px)`,\n          width:`${myWindowSize.width-40}px`,\n          height:`${myWindowSize.height-40}px`,\n          gap:`${gapSize}px`,\n          fontSize: `${fontSize}px`\n        }}>\n          <div className=\"pb-5 flex col-start-1 col-end-5 row-start-1 items-end justify-end h-full w-full text-white\">\n            <div className=\"\">Numberasdfs</div>\n          </div>\n          <div className=\"calc-button-b\">\n            <div className=\"mx-auto\">AC</div>\n          </div>\n          <div className=\"calc-button-b\">\n            <div >+/-</div>\n          </div>\n          <div className=\"calc-button-b\">\n            <div >%</div>\n          </div>\n          <div className=\"calc-button-a\">\n            <div >/</div>\n          </div>\n          <div className=\"calc-button-c\">\n            <div >7</div>\n          </div>\n          <div className=\"calc-button-c\">\n            <div >8</div>\n          </div>\n          <div className=\"calc-button-c\">\n            <div >9</div>\n          </div>\n          <div className=\"calc-button-a\">\n            <div >*</div>\n          </div>\n\n          <div className=\"calc-button-c\">\n            <div >4</div>\n          </div>\n          <div className=\"calc-button-c\" >\n            <div >5</div>\n          </div>\n          <div className=\"calc-button-c\">\n            <div >6</div>\n          </div>\n          <div className=\"calc-button-a\">\n            <div >-</div>\n          </div>\n\n          <div className=\"calc-button-c\">\n            <div >1</div>\n          </div>\n          <div className=\"calc-button-c\">\n            <div >2</div>\n          </div>\n          <div className=\"calc-button-c\">\n            <div >3</div>\n          </div>\n          <div className=\"calc-button-a\">\n            <div >+</div>\n          </div>\n\n          <div className=\"col-span-2 calc-button-c\">\n            <div >0</div>\n          </div>\n          <div className=\"calc-button-c\">\n            <div >.</div>\n          </div>\n          <div className=\"calc-button-a\">\n            <div >=</div>\n          </div>\n\n        </div>\n    </React.StrictMode>\n  )\n}\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n\n    <div className=\"p-1 max-w-sm mx-auto bg-gray-800 rounded-sm shadow-md grid grid-cols-4 auto-rows-fr gap-x-2 gap-y-2 text-pink-200 text-center items-center\">\n      <div className=\"col-start-1 col-end-5 h-16 flex items-end justify-end\">\n        <div className=\"inline-block text-6xl\">0</div>\n      </div>\n\n      <div className={cssCalcButtonCont(ButtonType.Option)}>\n        <div className={cssCalcButton(ButtonType.Option)}>AC</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Option)}>\n        <div className={cssCalcButton(ButtonType.Option)}>+/-</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Option)}>\n        <div className={cssCalcButton(ButtonType.Option)}>%</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Action)}>\n        <div className={cssCalcButton(ButtonType.Action)}>/</div>\n      </div>\n\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>7</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>8</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>9</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Action)}>\n        <div className={cssCalcButton(ButtonType.Action)}>*</div>\n      </div>\n\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>4</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>5</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>6</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Action)}>\n        <div className={cssCalcButton(ButtonType.Action)}>-</div>\n      </div>\n\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>1</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>2</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>3</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Action)}>\n        <div className={cssCalcButton(ButtonType.Action)}>+</div>\n      </div>\n\n      <div className={`col-start-1 col-end-3 ${cssCalcButtonCont(ButtonType.Number, \"w-36\", \"h-12\")}`}>\n        <div className={cssCalcButton(ButtonType.Number)}>0</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Number)}>\n        <div className={cssCalcButton(ButtonType.Number)}>.</div>\n      </div>\n      <div className={cssCalcButtonCont(ButtonType.Action)}>\n        <div className={cssCalcButton(ButtonType.Action)}>=</div>\n      </div>\n\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n"],"sourceRoot":""}